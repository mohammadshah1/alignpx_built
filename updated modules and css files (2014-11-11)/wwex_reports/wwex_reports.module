<?php

/**
 *Implementing hook_menu().
 */
function wwex_reports_menu() {
	
	$items['load-by-count-date-all-in-one'] = array(
		'title' => 'Load Count by Date Reports',
		'access callback' => TRUE,
		'weight' => 0,  
		'menu_name' => 'menu-shipment-reports-menu',
		'type' => MENU_NORMAL_ITEM,
	);
	
	// success percentage report is disabled for now
	/*
	$items['success-percentage-page'] = array(
		'title' => 'Success Percentage Page',
		'page callback' => 'wwex_reports_success_percentage_page',
		'access callback' => TRUE,
		'weight' => 0,
		'menu_name' => 'menu-shipment-reports-menu',   
		'type' => MENU_NORMAL_ITEM,
	); 
 */
  
  return $items;
}

 
/**
 * Implementing hook_popup_process_alter().
 */  
function wwex_reports_date_popup_process_alter(&$element, &$form_state, $context) {
	unset($element['date']['#description']);
	unset($element['time']['#description']);
} 

/**
 * Implementing hook_form().
 */ 
function wwex_reports_form($form, &$form_state) {
  
	if ( empty($_GET['fdate']['date']) || empty($_GET['tdate']['date'])) {
		 
		$fdate = date('Y-m-d', time() - 60 * 60 * 24);
		$tdate = date('Y-m-d', time());
	}
	else {
		$fdate = $_GET['fdate']['date'];
		$tdate = $_GET['tdate']['date'];
	}
	
  $form['#method'] = 'GET';
  
  $form['fdate'] = array(
		'#type' => 'date_popup',
		'#date_label_position' => '',
		'#title' => 'From',
		'#date_format' => 'Y-m-d', 
		'#default_value' => $fdate, 
		'#maxlength' => 10,
	);
  
  $form['tdate'] = array(
		'#type' => 'date_popup',
		'#date_label_position' => '',
		'#title' => 'To',
		'#date_format' => 'Y-m-d',
		'#default_value' => $tdate,
		'#maxlength' => 10,
	);
	
  $form['market'] = array(
		'#type' => 'select',  
		'#title' => 'Markets(Select Markets)',
		'#multiple' => TRUE,
		'#pre_render' => array('dropdown_checkboxes'),
		'#options' => list_markets(),
		'#default_value' => $_GET['market'],
	);
  
  $form['sales'] = array(
		'#type' => 'select',
		'#multiple' => TRUE,
		'#pre_render' => array('dropdown_checkboxes'),
		'#title' => 'Sales Rep (Select Sales Rep)',
		'#options' => list_sales_rep(),
		'#default_value' => $_GET['sales'], 
	);
  
  $form['broker'] = array(
		'#type' => 'select',  
		'#title' => 'Broker (Select Broker)',
		'#multiple' => TRUE,
		'#pre_render' => array('dropdown_checkboxes'),
		'#options' => list_brokers(),
		'#default_value' => $_GET['broker'],
	);
 
 $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('View Shipment'),
	);
	
  return $form;
}

// success percentage page is disable for now
/*
// Callback function
function wwex_reports_success_percentage_page() {
	global $base_url;
	
	$uri =  request_uri();
	$query_str = explode("?" , $uri);
	if ( empty($query_str[1]) ) {
		drupal_add_js(drupal_get_path('module', 'wwex_reports') . '/js/wwex_reports.js');
		$sql_string .= " AND sf.field_shipment_franchise_nid IN (" . implode(", " , array_keys(list_markets())) . ") ";
		$sql_string .= " AND node.uid IN (" . implode(', ', array_keys(list_sales_rep())) . ") ";
		$sql_string .= " AND b.field_shipment_broker_uid IN (" . implode(', ', array_keys(list_brokers())) . ") ";
	}
	$output = "";
	$sql_string = "";

	if ((isset($_GET['fdate']['date']) && !empty($_GET['fdate']['date'])) && 
	(isset($_GET['tdate']['date']) && !empty($_GET['tdate']['date']))) {
		
		$FromDate =  $_GET['fdate']['date'];
		$ToDate =  $_GET['tdate']['date'];
		$FromDate2 =  str_replace( "-" , "" , $_GET['fdate']['date'] );
		$ToDate2 =  str_replace( "-" , "" , $_GET['tdate']['date'] );
		$sql_string .= " AND DATE(FROM_UNIXTIME(node.created)) >= '" . $FromDate . "' AND DATE(FROM_UNIXTIME(node.created)) <= '" . $ToDate . "'";
	}
	else {
		$FromDate2 =  '20140701';
		$ToDate2 =  '20140723';
		$fdate = date('Y-m-d', time() - 60 * 60 * 24);
		$tdate = date('Y-m-d', time());
		$sql_string .= "AND DATE(FROM_UNIXTIME(node.created)) >= '" . $fdate . "' AND DATE(FROM_UNIXTIME(node.created)) <= '" . $tdate . "'"; 
	}
	 
	if (isset($_GET['market']) && !empty($_GET['market'])) {
		$markets = implode("," , $_GET['market']);
		$sql_string .= " AND sf.field_shipment_franchise_nid IN (" . implode("," , $_GET['market']) . ") ";
	}
	else{
		$markets = '-';
		
	}
	 
	if (isset($_GET['sales']) && !empty($_GET['sales'])) {
		$sales = implode(',', $_GET['sales']);
		$sql_string .= " AND node.uid IN (" . implode(', ', $_GET['sales']) . ") ";
	}
	else{
		$sales = '-';
		
	}
	if (isset($_GET['broker']) && !empty($_GET['broker'])) {
		$broker = implode(',', $_GET['broker']);
		$sql_string .= " AND b.field_shipment_broker_uid IN (" . implode(',', $_GET['broker']) . ") ";
	}
	else{
		$brokers = '-';
		
	}
	$sql = "SELECT DISTINCT nid FROM {node}
		INNER JOIN field_data_field_load_status ON field_data_field_load_status.entity_id = node.nid 
		LEFT OUTER JOIN field_data_field_shipment_franchise sf ON sf.entity_id =  node.nid 
		LEFT OUTER JOIN field_data_field_shipment_broker b ON b.entity_id = node.nid
		WHERE type = 'shipment' 
		AND field_data_field_load_status.field_load_status_tid IN(1,2,3) " . $sql_string . " 
	";
    //echo $sql;
	$rows = array();
	$result = db_query($sql);
	$header = array('RFQ', 'Accomplished', 'Success Percentage');			 
	$rows = array();
	
	foreach ($result as $item) {
		$rows[] = $item->nid;
		$node = node_load($item->nid);
		
		if ($node->field_internal_load_status[LANGUAGE_NONE][0]['tid'] == 22 ||
			$node->field_internal_load_status[LANGUAGE_NONE][0]['tid'] == 23 ) {
				
			$accomplish_nids[] = $node->nid; 
		}
		$rfq_nid[] = $item->nid;
	}
	$rfq_nid_list = implode(", ", $rfq_nid); 
	$rfq = count($rows);
	$accomplish = count($accomplish_nids);
	$accomplish_nid_list = implode(", ", $accomplish_nids);

	// Rsq 
	if ( $rfq  > 0 ) {
		$rsq_link = '<a href ="' . url(  'load-count-detail/' . $rfq_nid_list ) . '" >' . $rfq .'</a>';
	}
	else {
		$rsq_link = $rfq;
	}
	
	// accomplish
	if ( $accomplish > 0) {
		$successed_link = '<a href ="' . url(  'load-count-detail/' . $accomplish_nid_list ) . '" >' . $accomplish .'</a>';
	}
	else{
		$successed_link = $accomplish;
	}
	
	$total_count = $rfq + $accomplish;
	$rsq_per = ( $rfq / $total_count ) * 100;
	$success_per = ( $accomplish / $total_count) * 100;
 
	$success_percentage = ( $accomplish / $rfq ) * 100;
 
 
	$rows[] = array($rsq_link, $successed_link, number_format($success_percentage, 0) . '%' );
 
 //pie chart start
 $data = array(
    array('success_per' => 'Success', 'votes' => $success_per),
    array('success_per' => 'RFQ', 'votes' => $rsq_per)
  );
 
  $options_pie = array(
    'title' => 'Success Percentage',
		'tooltip' => array(
			'enabled' => FALSE,
		),
		
    'fields' => array(
      'votes' => array(
        //'label' => t('Succeed'),
        'enabled' => TRUE,
      ),
			
    ),
    'xAxis' => array(
      'labelField' => 'success_per',
    ),
		
		 
    'data' => $data,
    'type' => 'pie',
  );
  
  $build['pie'] =  array(
    '#theme' => 'visualization',
    '#options' => $options_pie,
  );
 
 
 //pie chart end
$output .= '<div class="apx-view success-percentage-view"><div  id = "success_data" class = "view-filters"><div class="views-exposed-form">';
 $output .=  drupal_render(drupal_get_form('wwex_reports_form'));
 

 $output .= '<div class="success-percentage-table">';
 $output .= theme( 'table' , array('header' => $header, 'rows' => $rows));
 $output .= '</div>';
 
 $output .= drupal_render($build);
 $output .= '</div></div></div>';
 return $output;
}
*/

/*
 * Implementation of hook_views_api()
 */
function wwex_reports_views_api() {
  return array('api' => 3.0);
}

/**
 * Implements hook_theme().
 */
function wwex_reports_theme() {
  return array(
    'views_view_fields__report_detail_page' => array(
    'variables' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    'template' => 'views-view-fields--report-detail-page',
    'base hook' => 'views_view_fields',
    'path' => drupal_get_path('module', 'wwex_reports') . '/theme',
		),
		'views_view__load_by_count_date_all_in_one' => array(
    'variables' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    'template' => 'views-view--load-by-count-date-all-in-one',
    'base hook' => 'views_view',
    'path' => drupal_get_path('module', 'wwex_reports') . '/theme',
		),
		
		'views_view__load_count_detail' => array(
    'variables' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
    'template' => 'views-view--load-count-detail',
    'base hook' => 'views_view',
    'path' => drupal_get_path('module', 'wwex_reports') . '/theme',
		),
		 
	);
}

/**
 * Implementing hook_form_views_exposed_form_alter().
 */ 
function wwex_reports_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
	//drupal_set_message($form_id);
	global $user;
	 
	$user_obj = user_load($user->uid);
	$franchise_nid = $user_obj->field_user_franchise['und'][0]['nid']; 

	if ( $user->uid > 0) {
		$user_obj = user_load($user->uid); 
		$user_franchise_nid = $user_obj->field_user_franchise['und'][0]['nid'];
	}
	$query2 = "SELECT DISTINCT fr.entity_id, usr.name 
		FROM {field_data_field_user_franchise} fr, {users_roles} ur, {node} n, {users} usr 
		WHERE fr.field_user_franchise_nid = :franchise_nid AND (fr.entity_id = ur.uid AND ur.rid = '7') 
		AND fr.entity_id = n.uid AND fr.entity_id = usr.uid AND n.type = 'shipment'";
	$res2 = db_query($query2, array(':franchise_nid' => $user_franchise_nid));
	
	 
	//unset($form['uid']['#options']);
	unset($form['field_shipment_franchise_nid']['#options']);
	unset($form['field_shipment_broker_uid']['#options']);
	$delivered = array(22 => 'In Transit', 23 => 'Delivered');
	$load_status = $form['field_load_status_tid']['#options'];
	unset($load_status[4]);
	if ( !empty($load_status) ) {
		$options = $load_status + $delivered;
	}
	unset($form['field_load_status_tid']['#options']);
	$form['field_load_status_tid']['#options'] = $options;
	// Updating values in All Markets exposed select box
	$form['field_shipment_franchise_nid']['#options'][$franchise_nid] = node_load($franchise_nid)->title;
	
	$form['field_shipment_broker_uid']['#options'] = list_brokers();
	
}
  
/**
 * Implementing hook_views_query_alter().
 */ 
 
function wwex_reports_views_query_alter(&$view, &$query) {
	
	if ($view->name == 'load_by_count_date_view' || $view->name == 'clone_of_line_graph_load_by_count_date_' || 
			$view->name == 'bar_chart_load_by_count_date_' || $view->name == 'shipments_by_dates' || $view->name == 'load_by_count_date_all_in_one' ) {
			
		if ( is_array($_GET['field_load_status_tid']) ) {
			
			unset($query->table_queue['field_data_field_load_status']);
			foreach ($query->where[1]['conditions'] as $key => $conditions) {
				if ($conditions['field'] == 'field_data_field_load_status.field_load_status_tid') {
					 
					unset($query->where[1]['conditions'][$key]);	
				}
			}
				
			foreach ($_GET['field_load_status_tid'] as $val) {
				if ( $val == 22 || $val == 23) {
					$load_internal_status_tids[] = $val;	
				}
				else{
					$load_status_tids[] = $val;
				}
			}
				
			if	(	!empty($load_internal_status_tids) && !empty($load_status_tids) )	{
				 
				$join4 = new views_join;
				$join4->construct('field_data_field_internal_load_status', 'node', 'nid', 'entity_id');
				$view->query->add_relationship('field_data_field_internal_load_status', $join4, 'node');
				
				$join5 = new views_join;
				$join5->construct('field_data_field_load_status', 'node', 'nid', 'entity_id');
				$view->query->add_relationship('field_data_field_load_status', $join5, 'node');
				
				$or = db_or()->condition('field_data_field_load_status.field_load_status_tid', $load_status_tids, 'IN')->condition('field_data_field_internal_load_status.field_internal_load_status_tid', $load_internal_status_tids, 'IN');
				$query->add_where(1, $or);
				 
			}
			elseif ( empty($load_status_tids) ) {
				
				$join6 = new views_join;
				$join6->construct('field_data_field_internal_load_status', 'node', 'nid', 'entity_id');
				$view->query->add_relationship('field_data_field_internal_load_status', $join6, 'node');
				$query->where[2]['conditions'][4] = array(
					'field' => 'field_data_field_internal_load_status.field_internal_load_status_tid',
					'value' => $load_internal_status_tids,
					'operator' => 'IN',
				);
			}
			elseif ( !empty($load_status_tids) ) {
				
				$join7 = new views_join;
				$join7->construct('field_data_field_load_status', 'node', 'nid', 'entity_id');
				$view->query->add_relationship('field_data_field_load_status', $join7, 'node');
				$query->where[2]['conditions'][4] = array(
					'field' => 'field_data_field_load_status.field_load_status_tid',
					'value' => $load_status_tids,
					'operator' => 'IN', 
				);	
			}
		}
		
		if	(	isset($_GET['author_select']) && !empty($_GET['author_select'])	)	{
		  
			$query->where[2]['conditions'][2] = array(
				'field' => 'node.uid',
				'value' => $_GET['author_select'],
				'operator' => 'IN', 
			);
		}
		
		$uri =  request_uri();
		$query_str = explode("?" , $uri);
		if ( empty($query_str[1]) ) {
		
			$franchise_nids = array_keys(list_markets());
			$brokers = array_keys(list_brokers());
			$load_status_tids = array_keys(list_load_status());
			$sales_rep = array_keys(list_sales_rep());
			
			$join2 = new views_join;
			$join2->construct('field_data_field_shipment_franchise', 'node', 'nid', 'entity_id');
			$view->query->add_relationship('field_data_field_shipment_franchise', $join2, 'node');
			
			$query->where[2]['conditions'][2] = array(
				'field' => 'field_data_field_shipment_franchise.field_shipment_franchise_nid',
				'value' => $franchise_nids,
				'operator' => 'IN',
			);
			
			$join3 = new views_join;
			$join3->construct('field_data_field_shipment_broker', 'node', 'nid', 'entity_id');
			$view->query->add_relationship('field_data_field_shipment_broker', $join3, 'node');
			$query->where[2]['conditions'][3] = array(
				'field' => 'field_data_field_shipment_broker.field_shipment_broker_uid',
				'value' => $brokers,
				'operator' => 'IN', 
			);
			
			$join4 = new views_join;
			$join4->construct('field_data_field_internal_load_status', 'node', 'nid', 'entity_id');
			$view->query->add_relationship('field_data_field_internal_load_status', $join4, 'node');
			
			$join5 = new views_join;
			$join5->construct('field_data_field_load_status', 'node', 'nid', 'entity_id');
			$view->query->add_relationship('field_data_field_load_status', $join5, 'node');
			
			$or = db_or()->condition('field_data_field_load_status.field_load_status_tid', array(1, 2, 3), 'IN')->condition('field_data_field_internal_load_status.field_internal_load_status_tid', array(22, 23), 'IN');
			$query->add_where(1, $or);	
			
			
			$query->where[2]['conditions'][5] = array(
				'field' => 'node.uid',
				'value' => $sales_rep,
				'operator' => 'IN', 
			);			
		}		
	}
}


// hook_views_pre_render()
function wwex_reports_views_pre_render(&$view) {
	// Scramble the order of the rows shown on this result page.
	// Note that this could be done earlier, but not later in the view execution
	// process.
	if ( $view->name == 'load_by_count_date_all_in_one' ) {
		
		// update total values
		if ( isset( $view->totals )) {
			
			// first we get total customer rate (Total Retial Price)
			$total_customer_rate = isset($view->totals['field_customer_rate']) ? strip_tags($view->totals['field_customer_rate']) : 0;

			$total_margin = isset($view->totals['expression_1']) ? $view->totals['expression_1'] : 0;
			
			// calculate total marin %
			$margin_percentage = $total_customer_rate > 0 ? ($total_margin / $total_customer_rate) * 100 : 0;
			
			// replce total customer rate
			if ( isset($view->totals['field_customer_rate_1']) )
				$view->totals['field_customer_rate_1'] = '$' . number_format($total_customer_rate, 2, ' . ', ',');
				
			// replce total margin % rate
			if ( isset($view->totals['expression_2']) )
				$view->totals['expression_2'] = number_format($margin_percentage, 2, ' . ', '') . '%';
				
		}
		
		// change values per row
		// it is toatl of tiers e.g for tier A or B or C
		if ( isset($view->style_plugin->rendered_fields) ) {
			$rendered_fields = &$view->style_plugin->rendered_fields;
			
			foreach ($rendered_fields as $count => $fields) {
				
				// get revenue and margin per row
			    $total_customer_rate_pr = isset($fields['field_customer_rate']) ? $fields['field_customer_rate'] : 0;
				$total_margin_pr = isset($fields['expression_1']) ? $fields['expression_1'] : 0;
				
				// calculate margin % per row
				$margin_percentage_pr = $total_customer_rate_pr > 0 ? ($total_margin_pr / $total_customer_rate_pr) * 100 : 0;
				// change margin % per row 
				if ( isset($fields['expression_2']) )
					$view->style_plugin->rendered_fields[$count]['expression_2'] = number_format($margin_percentage_pr, 2, ' . ', '') . '%';
				
			}
				
		}
	}
}


// list of brokers 
function list_brokers() {
	
	global $user;
	$brokers = array();
	//$brokers[] = 'Select Broker';
	
	$res = db_query("SELECT field_user_franchise_nid  FROM {field_data_field_user_franchise} field_data_field_user_franchise  WHERE entity_id = :uid", array(':uid' => $user->uid));
	foreach ($res as $item) {
		 $franchise[] = $item->field_user_franchise_nid;
	}
	$res = db_query(" SELECT
						users.`name`,
						users.uid
						FROM
						{field_data_field_user_franchise} field_data_field_user_franchise
						INNER JOIN {users} users ON users.uid = field_data_field_user_franchise.entity_id
						INNER JOIN {users_roles} users_roles ON users_roles.uid = users.uid
						INNER JOIN {role} role ON users_roles.rid = role.rid
						WHERE
						role.rid = 7 AND
						field_data_field_user_franchise.field_user_franchise_nid IN (:frnachises)", array(':frnachises' => $franchise));
	
	foreach ($res as $item) {
		$brokers[$item->uid] = $item->name;
	}
	
	return $brokers; 
} 

// List of Sales Rep 
function list_sales_rep() {
	
	global $user;
	$sales_rep = array();
	//$sales_rep[] = 'Select Sale Rep';
	
	if ($user->uid > 0) {
		$user_obj = user_load($user->uid); 
		$user_franchise_nid = $user_obj->field_user_franchise['und'][0]['nid'];
	}
	$query = "SELECT DISTINCT fr.entity_id, usr.name 
		FROM {field_data_field_user_franchise} fr, {users_roles} ur, {node} n, {users} usr 
		WHERE fr.field_user_franchise_nid = :franchise_nid AND (fr.entity_id = ur.uid AND ur.rid != '7') 
		AND fr.entity_id = n.uid AND fr.entity_id = usr.uid AND n.type = 'shipment'
	";

	$res = db_query($query, array(':franchise_nid' => $user_franchise_nid));
	
	foreach	(	$res as $item	)	{
		$sales_rep[$item->entity_id] = $item->name;
	}
	return $sales_rep; 
} 

// list markets
function list_markets() {
	global $user;
	$markets = array();
	//$markets[] = 'Select Market';
	$res = db_query("SELECT node.title ,field_data_field_user_franchise.field_user_franchise_nid  FROM 
		{field_data_field_user_franchise} field_data_field_user_franchise 
		INNER JOIN {node} node ON field_data_field_user_franchise.field_user_franchise_nid = node.nid 
		WHERE field_data_field_user_franchise.entity_id = :uid", array(':uid' => $user->uid));
	
	foreach	(	$res as $item	)	{
		$markets[$item->field_user_franchise_nid] = $item->title;
	}
	return $markets; 
} 

// List load status
function list_load_status() {
	$load_status = array();
	//$load_status[] = 'Select Status';
	$res = db_query("SELECT
			taxonomy_term_data.`name` as name,
			taxonomy_term_data.tid as tid
			FROM
			{field_data_field_load_status} field_data_field_load_status
			INNER JOIN {taxonomy_term_data} taxonomy_term_data ON taxonomy_term_data.tid = field_data_field_load_status.field_load_status_tid
			GROUP BY
			field_data_field_load_status.field_load_status_tid
		");

	foreach	(	$res as $item	)	{
		$load_status[$item->tid] = $item->name;
	}
	
	return $load_status; 
} 
