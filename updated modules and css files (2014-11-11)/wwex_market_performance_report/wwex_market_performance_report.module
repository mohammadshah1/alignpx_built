<?php
/**
 *Implementing hook_menu().
 */
function wwex_market_performance_report_menu(){
	 
	$items['market-performance-report'] = array(
		'title' => 'Market Performance Report',
		'page callback' => 'wwex_market_performance_report_page_callback',
		'access callback' => 'wwex_revenue_report_user_has_role',
		'access arguments' => array(array('super user')),
		'weight' => 0,  
		'menu_name' => 'menu-shipment-reports-menu',
		'type' => MENU_NORMAL_ITEM,
	); 
	
  return $items;
}

function wwex_market_performance_report_dropdown_options(){
	$query = "SELECT str_to_date( concat( yearweek( node.created ) , ' monday' ) , '%X%V %W' ) AS week_sdate
	FROM {node}
	WHERE TYPE = 'shipment'
	GROUP BY yearweek( node.created )";
	$res = db_query($query);
	$options = array();
	$options['all'] = 'Select Week';
	foreach ($res as $item){
		if(!empty($item->week_sdate)){
			$options[$item->week_sdate] = $item->week_sdate;
		}
	}
	return $options;
}

function wwex_market_performance_report_page_callback(){

	if((isset($_GET['start_week']) && !empty($_GET['start_week']) && $_GET['start_week'] != 'all') &&
	( isset($_GET['end_week']) && !empty($_GET['end_week']) && $_GET['end_week'] != 'all') ){
		
		$sql_query = '';
		$sql_query .= " AND ( (str_to_date( concat( yearweek( node.created ) , ' monday' ) , '%X%V %W' )  >= '" .$_GET['start_week']. "') AND (str_to_date( concat( yearweek( node.created ) , ' monday' ) , '%X%V %W' )  <= '" .$_GET['end_week']. "'))";
	}
	
	$query = "SELECT count( node.nid ) AS shipments, GROUP_CONCAT(node.nid) AS nids,
	SUM(field_data_field_shipment_booking_fee.field_shipment_booking_fee_value) AS sum_booking_fee, 
	str_to_date( concat( yearweek( node.created ) , ' monday' ) , '%X%V %W' ) AS week_sdate,
	field_data_field_shipment_franchise.field_shipment_franchise_nid AS  market 
	FROM {node}
	LEFT JOIN field_data_field_shipment_franchise ON node.nid = field_data_field_shipment_franchise.entity_id 
	AND (field_data_field_shipment_franchise.entity_type = 'node' AND field_data_field_shipment_franchise.deleted = '0')  
	LEFT JOIN field_data_field_shipment_booking_fee ON node.nid = field_data_field_shipment_booking_fee.entity_id 
	AND (field_data_field_shipment_booking_fee.entity_type = 'node' AND field_data_field_shipment_booking_fee.deleted = '0')
	WHERE (node.type = 'shipment' " .$sql_query. ")
	GROUP BY yearweek( node.created ), market";
	//echo $query;
	$res = db_query($query);
	$row = array();
	global $base_url;
	$total_trans = 0;
	$total_booking = 0;
	$total_avg = 0;
	$total_performance = 0;
	$total_weeks = 0;
	$i=0;
	foreach ( $res as $item ) {
		if( $item->week_sdate != NULL){
		$row['dates'][] = $item->week_sdate;
		$row['shipments'][] = $item->shipments;
		$row['sum_booking_fee'][] = $item->sum_booking_fee;
		$avg = $item->sum_booking_fee/$item->shipments;
		$row['avg'][] = $avg;
		$performance = round($avg/55*100); 
		$row['performance'][] = $performance;
		$row['market'][] = $item->market;
		$row['nids'][] = $item->nids;		
		/* Totals*/
		//$total_weeks += $item->week_sdate;
		//if($i==1){
		$total_trans += $item->shipments;
		$total_booking += $item->sum_booking_fee;
		$total_avg += $avg;
		//$total_performance += $performance;
		$total_avg = ($total_booking/$total_trans);
		$total_performance = round($total_avg/55 * 100);
		//}
		//$i=1;
		}
		
		
	}
	/*
	$link = "SELECT node.nid  AS shipments
	FROM node
	WHERE (node.type = 'shipment' " .$sql_query. ")
	GROUP BY yearweek( node.created )";
	 */
	foreach ( $row['dates'] as $key => $item ) {
		if( !empty($item) ) {
			/*
			$link = "SELECT node.nid AS nid FROM node WHERE (node.type = 'shipment' 
			AND str_to_date( concat( yearweek( node.created ) , ' monday' ) , '%X%V %W' ) = '" .$item. "') ";
			$result = db_query($link);
			$nid = array();
			foreach ($result as $nids){
				$nid[] = $nids->nid;
				
			}
			 */
			$hyper_link = "<a href = '" .$base_url. "/load-count-detail/". $row['nids'][$key]."'> " .$row['shipments'][$key]. "</a>";
			$franchise  = node_load($row['market'][$key]);
			$rows[] = array($item, $franchise->title , $hyper_link, '$'.number_format($row['sum_booking_fee'][$key], 2), '$'.number_format($row['avg'][$key], 2), number_format($row['performance'][$key], 2) );
		}
	}
		$sum_row =  array('', '',number_format($total_trans, 0), '$'.number_format($total_booking, 2), '$'.number_format($total_avg, 2), number_format($total_performance, 2) );
	
	
	$header = array('Week Date', 'Markets', 'Transactions', 'Booking Fee', 'AVG', 'Performance');	
	$output .= '<div class="apx-view success-percentage-view"><div style="z-index: 0;"  id = "success_data" class = "view-filters"><div class="views-exposed-form">';
	$output .=  drupal_render(drupal_get_form('wwex_market_performance_report_search_form'));
	$output .= '<div class="success-percentage-table">';
	$output .= wwex_market_performance_report_theme_table($header, $sum_row, $rows, $attributes = array('class' => 'team-projects tablesorter', 'id' => 'team-projects-table'));
	$output .= '</div>';
	$output .= '</div></div></div>';
	return $output;
}
 
function wwex_market_performance_report_search_form(){
	$form = array();
	$form['#method'] = 'GET';
  
  $form['start_week'] = array(
		'#type' => 'select',
		'#date_label_position' => '',	
		'#title' => 'Start Week',
		'#options' => wwex_market_performance_report_dropdown_options(),
		'#default_value' => $_GET['start_week'], 
		'#maxlength' => 10,
	);
  
  $form['end_week'] = array(
		'#type' => 'select',
		'#date_label_position' => '',		
		'#title' => 'End Week',
		'#default_value' => $_GET['end_week'],
		'#options' => wwex_market_performance_report_dropdown_options(),
		'#maxlength' => 10,
	);
	
	$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
	);
	return $form;
}
/**
* Replacement of Drupal theme function allowing tfooter
*
* @param unknown_type $header
* @param unknown_type $footer
* @param unknown_type $rows
* @param unknown_type $attributes
* @param unknown_type $caption
* @return unknown
*/
function wwex_market_performance_report_theme_table($header, $footer = NULL, $rows, $attributes = array(), $caption = NULL) {

  // Add sticky headers, if applicable.
  if (count($header)) {
    drupal_add_js('misc/tableheader.js');
    // Add 'sticky-enabled' class to the table to identify it for JS.
    // This is needed to target tables constructed by this function.
    $attributes['class'] = empty($attributes['class']) ? 'sticky-enabled' : ($attributes['class'] .' sticky-enabled');
  }

  $output = '<table'. drupal_attributes($attributes) .">\n";

  if (isset($caption)) {
    $output .= '<caption>'. $caption ."</caption>\n";
  }

  // Format the table header:
  if (count($header)) {
    $ts = tablesort_init($header);
    // HTML requires that the thead tag has tr tags in it followed by tbody
    // tags. Using ternary operator to check and see if we have any rows.
    $output .= (count($rows) ? ' <thead><tr>' : ' <tr>');
    foreach ($header as $cell) {
      $cell = tablesort_header($cell, $header, $ts);
      $output .= _theme_table_cell($cell, TRUE);
    }
    // Using ternary operator to close the tags based on whether or not there are rows
    $output .= (count($rows) ? " </tr></thead>\n" : "</tr>\n");
  }
  else {
    $ts = array();
  }
 
  if (count($footer)) {
     // HTML requires that the tfoot tag has tr tags in it followed by tbody
     // tags. Using ternary operator to check and see if we have any rows.
     $output .= (count($rows) ? ' <tfoot><tr>' : ' <tr>');
     $i = 0;
     foreach ($footer as $cell) {
       $cell = tablesort_cell($cell, $footer, $ts, $i++);
       $output .= _theme_table_cell($cell);
     }
     // Using ternary operator to close the tags based on whether or not there are rows
     $output .= (count($rows) ? " </tr></tfoot>\n" : "</tr>\n");
   }

  // Format the table rows:
  if (count($rows)) {
    $output .= "<tbody>\n";
    $flip = array('even' => 'odd', 'odd' => 'even');
    $class = 'even';
    foreach ($rows as $number => $row) {
      $attributes = array();

      // Check if we're dealing with a simple or complex row
      if (isset($row['data'])) {
        foreach ($row as $key => $value) {
          if ($key == 'data') {
            $cells = $value;
          }
          else {
            $attributes[$key] = $value;
          }
        }
      }
      else {
        $cells = $row;
      }
      if (count($cells)) {
        // Add odd/even class
        $class = $flip[$class];
        if (isset($attributes['class'])) {
          $attributes['class'] .= ' '. $class;
        }
        else {
          $attributes['class'] = $class;
        }

        // Build row
        $output .= ' <tr'. drupal_attributes($attributes) .'>';
        $i = 0;
        foreach ($cells as $cell) {
          $cell = tablesort_cell($cell, $header, $ts, $i++);
          $output .= _theme_table_cell($cell);
        }
        $output .= " </tr>\n";
      }
    }
    $output .= "</tbody>\n";
  }

  $output .= "</table>\n";
  return $output;
}