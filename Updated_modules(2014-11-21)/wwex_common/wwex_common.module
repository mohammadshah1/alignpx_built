<?php 

/**
* @file
*  wwex_tier_report_views_aggregation_functions_info() add new function for comma separated values
*/

/*
 * Implementation of hook_views_aggregation_functions_info()
 */
function wwex_common_views_aggregation_functions_info() {
  $functions = array(
    'wwex_common_comma_separated' => array(
      'group' => NULL,
      'column' => t('Comma Separated'),
    ),
    'wwex_common_comma_separated_link' => array(
      'group' => NULL,
      'column' => t('Comma Separated Link'),
    ),
  );
  return $functions;
}

/*
 *  wwex_common_comma_separated()
 */
function wwex_common_comma_separated($groups, $field_handler) {
  $separator_group = ',';
  $separator_column = ',';
  $values = array('column' => array());
  foreach ($groups as $group => $rows) {
    $cell_values = array();
    foreach ($rows as $num => $row) {
      $cell = trim(views_aggregator_get_cell($field_handler, $num, TRUE));
      if (!empty($cell)) {
        if (!in_array($cell, $cell_values)) {
          $cell_values[] = $cell;
        }
        if (!in_array($cell, $values['column'])) {
          $values['column'][] = $cell;
        }
      }
    }
    if (count($cell_values) > 1) {
      // After grouping the fields in the group no longer belong to one
      // entity. Cannot easily support hyper-linking, so switch it off.
      unset($field_handler->options['link_to_node']);
      @sort($cell_values, SORT_NATURAL | SORT_FLAG_CASE);
    }
    $values[$group] = implode($separator_group, $cell_values);
  }
  @sort($values['column'], SORT_NATURAL | SORT_FLAG_CASE);
	// empty totals column
  $values['column'] = array();
  //$values['column'] = implode($separator_column, $values['column']);
  return $values;
}

/*
 *  wwex_common_comma_separated_link()
 */
function wwex_common_comma_separated_link($groups, $field_handler, $separator_group_option, $link) {
  $separator_group = ',';
  $separator_column = ',';
  $values = array('column' => array());
	
	$count_total = 0;
  foreach ($groups as $group => $rows) {
    $cell_values = array();
    foreach ($rows as $num => $row) {
      $cell = trim(views_aggregator_get_cell($field_handler, $num, TRUE));
      if (!empty($cell)) {
				
        if (!in_array($cell, $cell_values)) {
					$fetched_values = wwex_common_fetch_array_recursive($cell, $separator_group_option);
					
					foreach($fetched_values as $new_value){
						// get distinct
						if (!in_array($new_value, $cell_values) ) {
          		$cell_values[] = $new_value;
						}
					}
        }
      }
    }
    if (count($cell_values) > 1) {
      // After grouping the fields in the group no longer belong to one
      // entity. Cannot easily support hyper-linking, so switch it off.
      unset($field_handler->options['link_to_node']);
      @sort($cell_values, SORT_NATURAL | SORT_FLAG_CASE);
    }
		$col_values = implode($separator_group, $cell_values);
    $values[$group] = l(count($cell_values), $link . '/' . $col_values);
		
		$$count_total += count($cell_values);
  }
	$values['column'] = $$count_total;
  return $values;
}

/*
 *  wwex_common_fetch_array_recursive()
 */
function wwex_common_fetch_array_recursive($cell, $separator_group_option){
	$separator_group_option = $separator_group_option == '' ? ',' : $separator_group_option;
	if(!empty($cell)){
		$new_array = explode($separator_group_option, $cell);
		return $new_array;
	}
}

/**
 * Get Company Name
 *
 * @param $w_number 
 *    w number by which company name will be return
 */
function wwex_common_get_company_name( $w_number ){
	if( $w_number ){ 
		$sql = "SELECT
		taxonomy_term_data.`name`
		FROM
		field_data_field_company
		INNER JOIN {taxonomy_term_data} ON taxonomy_term_data.tid = field_data_field_company.field_company_tid
		INNER {JOIN field_data_field_w_number} ON field_data_field_w_number.entity_id = field_data_field_company.entity_id
		WHERE  
		field_data_field_w_number.field_w_number_value = :w_number
		LIMIT 1
		";
		
		$result = db_query($sql, array(':w_number' => $w_number));
		if( !empty($result) ){
			foreach ($result as $item) {
				return $item->name;
			}
		}
	}
}