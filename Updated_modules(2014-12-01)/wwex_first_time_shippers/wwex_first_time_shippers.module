<?php

/**
* @file
* function wwex_first_time_shippers_menu()
* function wwex_first_time_shippers_views_pre_render(&$view)
* function wwex_first_time_shippers_menu()
* function wwex_first_time_shippers_user_franchise()
* function wwex_first_time_shippers_list_sales_rep()
* function wwex_first_time_shippers_views_query_alter(&$view, &$query)
*/

/*
 * Get all first ship date ranges
 */
function wwex_first_time_shippers_get_selected_date_range(){
	
	$selected_filter = isset($_GET['range']) && $_GET['range']!='' ? wwex_access_clean_input($_GET['range'], TRUE) : 0;
	
	// get last week
	$previous_week_stapm = strtotime("-1 week +1 day");
	$start_week_stamp = strtotime("last sunday", $previous_week_stapm);
	
	$start_week = date('Y-m-d', $start_week_stamp);
	$end_week = date('Y-m-d', strtotime("next saturday", $start_week_stamp));
	
	$period_ranges = array(
		// this week only
		1 => array(
			':ship_date_range_1' => date('Y-m-d', strtotime('last monday')), 
			':ship_date_range_2' => date('Y-m-d') 
		),
		// this month only
		2 => array(
			':ship_date_range_1' => date('Y-m-01'), 
			':ship_date_range_2' => date('Y-m-d')
		),
		// last 3 months only
		3 => array(
			':ship_date_range_1' => date('Y-m-01', strtotime('-2 month')), 
			':ship_date_range_2' => date('Y-m-d')
		),
		// previous week only
		4 => array(
			':ship_date_range_1' => $start_week, 
			':ship_date_range_2' => $end_week 
		),
		// previous month only
		5 => array(
			':ship_date_range_1' => date('Y-m-01', strtotime('-1 month')), 
			':ship_date_range_2' => date('Y-m-01', strtotime('-1 day')) 
		),
	);

	// get selected filter
	if( $selected_filter && isset($period_ranges[$selected_filter]) ){
		$selected_period = $period_ranges[$selected_filter];
	}else {
		$selected_period = $period_ranges[5];
	}
	return $selected_period;
}

/*
 * Get first ship date
 */
function wwex_first_time_shippers_get_first_ship_date($w_number){
	if( $w_number ){
		$sql = "SELECT
		DATE_FORMAT(field_data_field_ship_date.field_ship_date_value, '%Y-%m-%d') as ship_date
		FROM
		node node
		LEFT JOIN field_data_field_w_number ON field_data_field_w_number.entity_id = node.nid
		LEFT JOIN field_data_field_ship_date ON field_data_field_ship_date.entity_id = node.nid
		WHERE  
		field_data_field_w_number.field_w_number_value = '".$w_number."'
		ORDER BY ship_date ASC
		LIMIT 1
		";
		
		$result = db_query($sql);
		if( !empty($result) ){
			foreach ($result as $item) {
				return $item->ship_date;
			}
		}
	}
}

/*
 * Check is first time shippers
 */
function wwex_first_time_shippers_is_first_time($w_number){
	if( $w_number ){
		$selected_period = wwex_first_time_shippers_get_selected_date_range();
		$first_date = wwex_first_time_shippers_get_first_ship_date( $w_number );
		if( !empty($selected_period) && $first_date ){
			if( $first_date >= $selected_period[':ship_date_range_1'] && $first_date <= $selected_period[':ship_date_range_2'] ) {
				return 1; 
			}
			else { 
				return 0; 
			}
		}
	}
	return 0;
}

// hook_views_pre_render()
function wwex_first_time_shippers_views_pre_render(&$view) {
  global $base_url;
  // Scramble the order of the rows shown on this result page.
  // Note that this could be done earlier, but not later in the view execution
  // process.
  if ( $view->name == 'first_time_shippers' ) {
  
    // re calculate totals
    if ( isset($view->totals) && !empty($view->totals) ) {

      // first we get total customer rate (Total Retial Price)
      $total_customer_rate = isset($view->totals['field_customer_rate']) ? strip_tags($view->totals['field_customer_rate']) : 0;
      // get total margin
      $total_margin = isset($view->totals['expression_1']) ? $view->totals['expression_1'] : 0;
      
      // calculate total marin %
      $margin_percentage = $total_customer_rate != 0 ? ($total_margin / $total_customer_rate) * 100 : 0;
  
      // replce margin % total
      if ( isset($view->totals['expression_2']) )
        $view->totals['expression_2'] = number_format($margin_percentage, 2, '.', '') . '%';
  
      // replace retail total with retail hidden total
      if ( isset($view->totals['field_customer_rate_1']) )
        $view->totals['field_customer_rate_1'] = '$' . number_format($total_customer_rate, 2, '.', ',');
   
    }

    // recalculate per row
    if ( isset($view->style_plugin->rendered_fields) ) {
  
      $rendered_fields = &$view->style_plugin->rendered_fields;
  
      foreach ($rendered_fields as $count => $fields) {
        // first we get total customer rate (Total Retial Price) per row
        $total_customer_rate_pr = isset($fields['field_customer_rate']) ? strip_tags($fields['field_customer_rate']) : 0;
        // get total margin per row
        $total_margin_pr = isset($fields['expression_1']) ? $fields['expression_1'] : 0;

        // calculate total marin % per row
        $margin_percentage_pr = $total_customer_rate_pr != 0 ? ($total_margin_pr / $total_customer_rate_pr) * 100 : 0;
  
        // replace margin % total per row
        if ( isset($fields['expression_2']) )
          $view->style_plugin->rendered_fields[$count]['expression_2'] = number_format($margin_percentage_pr, 2, '.', '') . '%';
  
      }
  
    }
  
  }
}

/*
 * Implementation of hook_views_api()
 */
function wwex_first_time_shippers_views_api() {
  return array('api' => 3.0);
}

/**
 * Implements hook_theme().
 */
function wwex_first_time_shippers_theme() {
  return array(
    'views_view__first_time_shippers' => array(
      'variables' => array('view' => NULL, 'options' => NULL, 'row' => NULL),
      'template' => 'views-view--first-time-shippers',
      'base hook' => 'views_view',
      'path' => drupal_get_path('module', 'wwex_first_time_shippers') . '/theme',
    ),
  );
}
// get user franchise
function wwex_first_time_shippers_user_franchise() {
  global $user;
  
  if ($user->uid > 0) {
    $user_obj = user_load($user->uid); 
    $user_franchise_nid = isset($user_obj->field_user_franchise['und'][0]['nid']) ? $user_obj->field_user_franchise['und'][0]['nid'] : 0;
  }
  
  return $user_franchise_nid;
}

// get all sales rep
function wwex_first_time_shippers_list_sales_rep() {
  global $user;
  $sales_rep = array();
  //$sales_rep[] = 'Select Sale Rep';

  if ($user->uid > 0) {
    $user_obj = user_load($user->uid); 
    $user_franchise_nid = isset($user_obj->field_user_franchise['und'][0]['nid']) ? $user_obj->field_user_franchise['und'][0]['nid'] : 0;
  }
  $query = "SELECT DISTINCT fr.entity_id, usr.name 
  FROM field_data_field_user_franchise fr,users_roles ur, node n, users usr 
  WHERE fr.field_user_franchise_nid = :franchise_nid AND (fr.entity_id = ur.uid AND ur.rid != '7') 
  AND fr.entity_id = n.uid AND fr.entity_id = usr.uid AND n.type = 'shipment'
  ";

  $res = db_query($query, array(':franchise_nid' => $user_franchise_nid));

  if ( !empty($res) ) {
    foreach ( $res as $item ) {
    $sales_rep[] = $item -> entity_id;
    }
  }
  
  return $sales_rep;
}

/**
 * Implementing hook_views_query_alter().
 */ 
function wwex_first_time_shippers_views_query_alter(&$view, &$query) {
  if ($view->name == 'first_time_shippers') {
		
		if( !empty($query->where[1]['conditions']) )
		{
			foreach( $query->where[1]['conditions'] as $key => $condition )
			{
				if (strpos($condition['field'], 'field_data_field_ship_date_field_ship_date_value') !== false)
				{
					$selected_period = wwex_first_time_shippers_get_selected_date_range();
					if( !empty($selected_period) ){
						// remove old condition
						unset($query->where[1]['conditions'][$key]);
						
						// add custom condition
						$query->where[1]['conditions'][] = array(
							'field' => "DATE_FORMAT(field_data_field_ship_date.field_ship_date_value, '%Y-%m-%d') BETWEEN :ship_date_range_1 AND :ship_date_range_2",
							'value' => $selected_period,
							'operator' => 'formula'
						);
					}
				}
			}
		}
		
    // add sales rep filter
    if ( function_exists('wwex_sales_rep_report_list_sales_rep')) {
      $sales_rep = wwex_sales_rep_report_list_sales_rep();
      if ( !empty($sales_rep) ) {
        $query->where[1]['conditions'][] = array(
        'field' => 'node.uid',
        'value' => $sales_rep,
        'operator' => 'IN', 
      );
      }
      // if sales_rep filter is selected, we have to hide main display
      // so we are adding some condition which is not
      // present, so it will automatic hide view due to no result found
      else {
      $query->where[1]['conditions'][] = array(
        'field' => 'node.uid',
        'value' => -999,
        'operator' => '=', 
        );
      }
    }

    // add user franchise filter
    if ( function_exists('wwex_reports_list_markets')) {
      $user_franchise = wwex_reports_list_markets();
  
      // add franchis field relation in query
      $join = new views_join;
      $join->construct('field_data_field_shipment_franchise', 'node', 'nid', 'entity_id');
      $view->query->add_relationship('field_data_field_shipment_franchise', $join, 'node');
  
      if ( !empty($user_franchise) ) {
        $query->where[1]['conditions'][] = array(
        'field' => 'field_data_field_shipment_franchise.field_shipment_franchise_nid',
        'value' => array_keys($user_franchise),
        'operator' => 'IN', 
      );
      }
      // if user has no franchise, hide view
      else {
      $query->where[1]['conditions'][] = array(
        'field' => 'field_data_field_shipment_franchise.field_shipment_franchise_nid',
        'value' => -999,
        'operator' => '=', 
        );
      }
    }
  }
}

